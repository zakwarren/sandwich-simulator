{"version":3,"sources":["store/actions/actionTypes.js","utils/serverApi.js","store/actions/sandwichSimulator.js","store/actions/order.js","store/actions/auth.js","utils/utilities.js","components/UI/Button/Button.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Sandwich/BuildControls/BuildControl/BuildControl.module.css","components/UI/Spinner/Spinner.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Sandwich/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","containers/Auth/Auth.module.css","hoc/ErrorHandler/ErrorHandler.js","components/UI/Input/Input.js","components/Sandwich/Ingredient/Ingredient.js","components/Sandwich/Sandwich.js","hoc/Layout/Layout.module.css","assets/images/logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Sandwich/Sandwich.module.css","components/Sandwich/Ingredient/Ingredient.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Sandwich/BuildControls/BuildControl/BuildControl.js","components/Sandwich/BuildControls/BuildControls.js","components/Sandwich/OrderSummary/OrderSummary.js","containers/SandwichSimulator/SandwichSimulator.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/sandwichSimulator.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["SET_INGREDIENTS","ADD_INGREDIENT","REMOVE_INGREDIENT","FETCH_INGREDIENTS_FAILED","PURCHASE_INIT","PURCHASE_START","PURCHASE_SUCCESS","PURCHASE_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","Server","baseUrl","get","route","a","fetch","response","json","result","message","data","post","method","headers","body","JSON","stringify","Auth","signUp","authData","signIn","AuthServer","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","then","Error","ingredients","error","catch","fetchIngredientsFailed","purchaseInit","purchaseSandwich","orderData","token","id","orderId","purchaseSuccess","purchaseFail","fetchOrders","userId","queryParams","res","orders","fetchedOrders","key","push","fetchOrdersFail","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignUp","returnSecureToken","authPost","expirationDate","Date","getTime","expiresIn","setItem","localId","authFail","setAuthRedirectPath","path","authCheckState","getItem","getIngredientCounts","ingredientArray","ingCounts","ing","amount","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","Button","props","disabled","className","classes","btnType","join","onClick","clicked","children","module","exports","Spinner","Loader","Backdrop","show","Modal","nextProps","nextState","this","modalClosed","style","transform","opacity","Component","ErrorHandler","WrappedComponent","state","hasError","errorConfirmedHandler","setState","displayError","toString","Input","inputElement","inputClasses","InputElement","validationError","touched","shouldValidate","invalid","Invalid","ValidationError","errorMessage","elementType","elementConfig","onChange","changed","options","map","option","displayValue","Label","label","Ingredient","Sandwich","transformedIngredients","Object","keys","igKey","Array","_","i","reduce","rootArr","currVal","concat","Logo","src","logoImg","alt","NavigationItem","to","link","exact","activeClassName","active","NavigationItems","isAuth","DrawerToggle","Toolbar","drawerToggleClicked","DesktopOnly","SideDrawer","attachedClasses","Closed","open","Open","closed","Layout","showSideDrawer","sideDrawerCloseHandler","sideDrawerToggleHandler","prevState","isAuthenticated","Content","connect","BuildControl","Less","removed","More","added","BuildControls","price","toFixed","controls","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","SandwichSimulator","purchasing","ings","checkNoIngredients","values","every","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","disabledInfo","orderSummary","sandwich","onIngredientAdded","onIngredientRemoved","sandwichSimulator","totalPrice","ingName","actions","placeholder","validation","valid","formIsValid","inputChangedHandler","event","controlName","updatedControls","target","inputId","submitHandler","preventDefault","onAuth","switchAuthModeHandler","buildingSandwich","authRedirectPath","formElements","config","form","formElement","loading","ErrorMessage","authRedirect","onSubmit","building","Logout","onLogout","Orders","lazy","Checkout","App","onTryAutoSignIn","routes","fallback","component","render","withRouter","Boolean","window","location","hostname","match","initialState","action","find","updatedIng","newState","item","setIngredients","reducer","purchased","purchaseBurgerSuccess","newOrder","authLogout","composeEnhancers","compose","rootReducer","combineReducers","sandwichSimulatorReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.d9618336.chunk.js","sourcesContent":["export const SET_INGREDIENTS = \"SET_INGREDIENTS\";\r\nexport const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\r\n\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\r\nexport const PURCHASE_START = \"PURCHASE_START\";\r\nexport const PURCHASE_SUCCESS = \"PURCHASE_SUCCESS\";\r\nexport const PURCHASE_FAIL = \"PURCHASE_FAIL\";\r\n\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\r\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";\r\n","class Server {\r\n  baseUrl = \"https://sandwich-simulator-f4119.firebaseio.com\";\r\n\r\n  get = async (route) => {\r\n    try {\r\n      const response = await fetch(this.baseUrl + route);\r\n      const result = await response.json();\r\n      return result;\r\n    } catch (error) {\r\n      return { message: \"error\", data: error };\r\n    }\r\n  };\r\n\r\n  post = async (route, data) => {\r\n    try {\r\n      const response = await fetch(this.baseUrl + route, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n      const result = await response.json();\r\n      return result;\r\n    } catch (error) {\r\n      return { message: \"error\", data: error };\r\n    }\r\n  };\r\n}\r\n\r\nclass Auth extends Server {\r\n  baseUrl = \"https://identitytoolkit.googleapis.com/v1/accounts\";\r\n\r\n  signUp = async (authData) => {\r\n    return await this.post(\r\n      \":signUp?key=\" + process.env.REACT_APP_API_KEY,\r\n      authData\r\n    );\r\n  };\r\n\r\n  signIn = async (authData) => {\r\n    return await this.post(\r\n      \":signInWithPassword?key=\" + process.env.REACT_APP_API_KEY,\r\n      authData\r\n    );\r\n  };\r\n}\r\n\r\nexport default new Server();\r\n\r\nexport const AuthServer = new Auth();\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport Server from \"../../utils/serverApi\";\r\n\r\nexport const addIngredient = (name) => {\r\n  return {\r\n    type: actionTypes.ADD_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n  return {\r\n    type: actionTypes.REMOVE_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\n\r\nconst setIngredients = (ingredients) => {\r\n  return {\r\n    type: actionTypes.SET_INGREDIENTS,\r\n    ingredients: ingredients,\r\n    error: null,\r\n  };\r\n};\r\n\r\nconst fetchIngredientsFailed = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n  return (dispatch) => {\r\n    Server.get(\"/ingredient-details.json\")\r\n      .then((response) => {\r\n        if (response.message && response.message === \"error\") {\r\n          throw new Error(response.data);\r\n        } else {\r\n          dispatch(setIngredients(response));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchIngredientsFailed(error));\r\n      });\r\n  };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport Server from \"../../utils/serverApi\";\r\n\r\nexport const purchaseInit = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_INIT,\r\n  };\r\n};\r\n\r\nconst purchaseStart = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_START,\r\n  };\r\n};\r\n\r\nconst purchaseSuccess = (id, orderData) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_SUCCESS,\r\n    orderId: id,\r\n    orderData: orderData,\r\n  };\r\n};\r\n\r\nconst purchaseFail = (error) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const purchaseSandwich = (orderData, token) => {\r\n  return (dispatch) => {\r\n    dispatch(purchaseStart());\r\n    Server.post(\"/orders.json?auth=\" + token, orderData)\r\n      .then((result) => {\r\n        if (result.message && result.message === \"error\") {\r\n          throw new Error(result.data);\r\n        } else {\r\n          dispatch(purchaseSuccess(result.id, orderData));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(purchaseFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nconst fetchOrdersStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_START,\r\n  };\r\n};\r\n\r\nconst fetchOrdersSuccess = (orders) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n    orders: orders,\r\n  };\r\n};\r\n\r\nconst fetchOrdersFail = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchOrdersStart());\r\n    const queryParams =\r\n      \"?auth=\" + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n    Server.get(\"/orders.json\" + queryParams)\r\n      .then((res) => {\r\n        if (res.message && res.message === \"error\") {\r\n          throw new Error(res.data);\r\n        } else {\r\n          const fetchedOrders = [];\r\n          for (let key in res) {\r\n            fetchedOrders.push({\r\n              ...res[key],\r\n              id: key,\r\n            });\r\n          }\r\n          dispatch(fetchOrdersSuccess(fetchedOrders));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchOrdersFail(error));\r\n      });\r\n  };\r\n};\r\n","import { AuthServer } from \"../../utils/serverApi\";\r\n\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nconst authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nconst authSuccess = (token, userId) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    userId: userId,\r\n  };\r\n};\r\n\r\nconst authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nconst checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n    let authPost = AuthServer.signUp;\r\n    if (!isSignUp) {\r\n      authPost = AuthServer.signIn;\r\n    }\r\n    authPost(authData)\r\n      .then((response) => {\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.expiresIn * 1000\r\n        );\r\n        localStorage.setItem(\"token\", response.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.localId);\r\n\r\n        dispatch(authSuccess(response.idToken, response.localId));\r\n        dispatch(checkAuthTimeout(response.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(authFail(error.response.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n  return {\r\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n    path: path,\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout());\r\n      } else {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n","export const getIngredientCounts = (ingredientArray) => {\r\n  if (!ingredientArray) {\r\n    return;\r\n  }\r\n  let ingCounts = {};\r\n  for (let ing of ingredientArray) {\r\n    ingCounts[ing.type] = ing.amount;\r\n  }\r\n  return ingCounts;\r\n};\r\n\r\nexport const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n\r\nexport const checkValidity = (value, rules) => {\r\n  let isValid = true;\r\n  if (!rules) {\r\n    return true;\r\n  }\r\n\r\n  if (rules.required) {\r\n    isValid = value.trim() !== \"\" && isValid;\r\n  }\r\n\r\n  if (rules.minLength) {\r\n    isValid = value.length >= rules.minLength && isValid;\r\n  }\r\n\r\n  if (rules.maxLength) {\r\n    isValid = value.length <= rules.maxLength && isValid;\r\n  }\r\n\r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    isValid = pattern.test(value) && isValid;\r\n  }\r\n\r\n  if (rules.isNumeric) {\r\n    const pattern = /^\\d+$/;\r\n    isValid = pattern.test(value) && isValid;\r\n  }\r\n\r\n  return isValid;\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = (props) => (\r\n  <button\r\n    disabled={props.disabled}\r\n    className={[classes.Button, classes[props.btnType]].join(\" \")}\r\n    onClick={props.clicked}\r\n  >\r\n    {props.children}\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  btnType: PropTypes.string,\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2108_\",\"Open\":\"SideDrawer_Open__U2mty\",\"Closed\":\"SideDrawer_Closed__1kU7Y\",\"Logo\":\"SideDrawer_Logo__1c8Hu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__WCo61\",\"Label\":\"Input_Label__8gcUZ\",\"InputElement\":\"Input_InputElement__2ptBR\",\"Invalid\":\"Input_Invalid__bjp8-\",\"ValidationError\":\"Input_ValidationError__3AYNJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2Hvtx\",\"Label\":\"BuildControl_Label__2k9vz\",\"Less\":\"BuildControl_Less__1FRs_\",\"More\":\"BuildControl_More__16Vc4\"};","import React from 'react';\r\n\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default Spinner;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./Backdrop.module.css\";\r\n\r\nconst Backdrop = (props) =>\r\n  props.show ? (\r\n    <div className={classes.Backdrop} onClick={props.clicked}></div>\r\n  ) : null;\r\n\r\nBackdrop.propTypes = {\r\n  show: PropTypes.bool,\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Backdrop;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\n\r\nclass Modal extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      nextProps.show !== this.props.show ||\r\n      nextProps.children !== this.props.children\r\n    );\r\n  }\r\n\r\n  // componentDidUpdate() {\r\n  //     console.log('[Modal] did update');\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n        <div\r\n          className={classes.Modal}\r\n          style={{\r\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n            opacity: this.props.show ? \"1\" : \"0\",\r\n          }}\r\n        >\r\n          {this.props.children}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  show: PropTypes.bool,\r\n  modalClosed: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3KFa1\",\"Logo\":\"Toolbar_Logo__-oxLA\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1SUqI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2GH9a\",\"active\":\"NavigationItem_active__253TC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1-jiy\",\"OrderButton\":\"BuildControls_OrderButton__2DLX8\",\"enable\":\"BuildControls_enable__2lLCN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2RSgR\",\"Success\":\"Button_Success__3BXkx\",\"Danger\":\"Button_Danger__1ppee\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3UhUn\",\"ErrorMessage\":\"Auth_ErrorMessage__1IAJ6\"};","import React, { Component } from \"react\";\r\n\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\n\r\nconst ErrorHandler = (WrappedComponent) => {\r\n  return class extends Component {\r\n    state = {\r\n      hasError: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n      if (!this.props.error) {\r\n        this.setState({ hasError: true });\r\n      }\r\n    }\r\n\r\n    errorConfirmedHandler = () => {\r\n      this.setState({ hasError: false });\r\n    };\r\n\r\n    render() {\r\n      let displayError = null;\r\n      if (this.props.error) {\r\n        displayError = (\r\n          <Modal\r\n            show={this.state.hasError}\r\n            modalClosed={this.errorConfirmedHandler}\r\n          >\r\n            {this.props.error.toString()}\r\n          </Modal>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <>\r\n          {displayError}\r\n          <WrappedComponent {...this.props} />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default ErrorHandler;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n\r\n  let validationError = null;\r\n  if (props.touched && props.shouldValidate && props.invalid) {\r\n    inputClasses.push(classes.Invalid);\r\n    validationError = (\r\n      <p className={classes.ValidationError}>{props.errorMessage}</p>\r\n    );\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n      {validationError}\r\n    </div>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  touched: PropTypes.bool,\r\n  shouldValidate: PropTypes.object,\r\n  invalid: PropTypes.bool,\r\n  errorMessage: PropTypes.string,\r\n  elementType: PropTypes.string.isRequired,\r\n  elementConfig: PropTypes.object.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./Ingredient.module.css\";\r\n\r\nconst Ingredient = (props) => <div className={classes[props.type]}></div>;\r\n\r\nIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Ingredient;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./Sandwich.module.css\";\r\nimport Ingredient from \"./Ingredient/Ingredient\";\r\n\r\nconst Sandwich = (props) => {\r\n  let transformedIngredients = Object.keys(props.ingredients)\r\n    .map((igKey) => {\r\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n        return <Ingredient key={igKey + i} type={igKey} />;\r\n      });\r\n    })\r\n    .reduce((rootArr, currVal) => {\r\n      return rootArr.concat(currVal);\r\n    }, []);\r\n  if (transformedIngredients.length === 0) {\r\n    transformedIngredients = <p>Please start adding ingredients!</p>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Sandwich}>\r\n      <Ingredient type=\"BreadTop\" />\r\n      {transformedIngredients}\r\n      <Ingredient type=\"BreadBottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nSandwich.propTypes = {\r\n  ingredients: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Sandwich;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3mANH\"};","module.exports = __webpack_public_path__ + \"static/media/logo.2bbe275a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__WASKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__12fVw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3KHz-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__37y8V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sandwich\":\"Sandwich_Sandwich__3JK6B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"Ingredient_BreadBottom__2jSXL\",\"BreadTop\":\"Ingredient_BreadTop__m4xT0\",\"Meat\":\"Ingredient_Meat__3oDxd\",\"Cheese\":\"Ingredient_Cheese__3M8xC\",\"Bacon\":\"Ingredient_Bacon__22brV\",\"Lettuce\":\"Ingredient_Lettuce__UL8vC\",\"Tomato\":\"Ingredient_Tomato__3Itbg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1XS3E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2GJRX\",\"load6\":\"Spinner_load6__8dbzY\",\"round\":\"Spinner_round__hAUD1\"};","import React from \"react\";\r\n\r\nimport logoImg from \"../../assets/images/logo.png\";\r\nimport classes from \"./Logo.module.css\";\r\n\r\nconst Logo = () => (\r\n  <div className={classes.Logo}>\r\n    <img src={logoImg} alt=\"Logo\" />\r\n  </div>\r\n);\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./NavigationItem.module.css\";\r\n\r\nconst NavigationItem = (props) => (\r\n  <li className={classes.NavigationItem}>\r\n    <NavLink\r\n      to={props.link}\r\n      exact={props.exact}\r\n      activeClassName={classes.active}\r\n    >\r\n      {props.children}\r\n    </NavLink>\r\n  </li>\r\n);\r\n\r\nNavigationItem.propTypes = {\r\n  link: PropTypes.string.isRequired,\r\n  exact: PropTypes.bool,\r\n};\r\n\r\nexport default NavigationItem;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./NavigationItems.module.css\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\n\r\nconst NavigationItems = (props) => (\r\n  <ul className={classes.NavigationItems}>\r\n    <NavigationItem link=\"/\" exact>\r\n      Burger Builder\r\n    </NavigationItem>\r\n    {props.isAuth ? (\r\n      <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    ) : null}\r\n    {props.isAuth ? (\r\n      <NavigationItem link=\"/logout\">Log out</NavigationItem>\r\n    ) : (\r\n      <NavigationItem link=\"/auth\">Log in</NavigationItem>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nexport default NavigationItems;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./DrawerToggle.module.css\";\r\n\r\nconst DrawerToggle = (props) => (\r\n  <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n\r\nDrawerToggle.propTypes = {\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default DrawerToggle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./Toolbar.module.css\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\r\n\r\nconst Toolbar = (props) => (\r\n  <header className={classes.Toolbar}>\r\n    <DrawerToggle clicked={props.drawerToggleClicked} />\r\n    <div className={classes.Logo}>\r\n      <Logo />\r\n    </div>\r\n    <nav className={classes.DesktopOnly}>\r\n      <NavigationItems isAuth={props.isAuth} />\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nToolbar.propTypes = {\r\n  drawerToggleClicked: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./SideDrawer.module.css\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\n\r\nconst SideDrawer = (props) => {\r\n  let attachedClasses = [classes.SideDrawer, classes.Closed];\r\n  if (props.open) {\r\n    attachedClasses = [classes.SideDrawer, classes.Open];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Backdrop show={props.open} clicked={props.closed} />\r\n      <div className={attachedClasses.join(\" \")} onClick={props.closed}>\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavigationItems isAuth={props.isAuth} />\r\n        </nav>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nSideDrawer.propTypes = {\r\n  open: PropTypes.bool,\r\n  closed: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport classes from \"./Layout.module.css\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showSideDrawer: false,\r\n  };\r\n\r\n  sideDrawerCloseHandler = () => {\r\n    this.setState({ showSideDrawer: false });\r\n  };\r\n\r\n  sideDrawerToggleHandler = () => {\r\n    this.setState((prevState) => {\r\n      return { showSideDrawer: !prevState.showSideDrawer };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Toolbar\r\n          isAuth={this.props.isAuthenticated}\r\n          drawerToggleClicked={this.sideDrawerToggleHandler}\r\n        />\r\n        <SideDrawer\r\n          isAuth={this.props.isAuthenticated}\r\n          open={this.state.showSideDrawer}\r\n          closed={this.sideDrawerCloseHandler}\r\n        />\r\n        <main className={classes.Content}>{this.props.children}</main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./BuildControl.module.css\";\r\n\r\nconst BuildControl = (props) => (\r\n  <div className={classes.BuildControl}>\r\n    <div className={classes.Label}>{props.label}</div>\r\n    <button\r\n      className={classes.Less}\r\n      onClick={props.removed}\r\n      disabled={props.disabled}\r\n    >\r\n      Less\r\n    </button>\r\n    <button className={classes.More} onClick={props.added}>\r\n      More\r\n    </button>\r\n  </div>\r\n);\r\n\r\nBuildControl.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool,\r\n  removed: PropTypes.func.isRequired,\r\n  added: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BuildControl;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./BuildControls.module.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\n\r\nconst BuildControls = (props) => (\r\n  <div className={classes.BuildControls}>\r\n    <p>\r\n      Current Price: <strong>{props.price.toFixed(2)}</strong>\r\n    </p>\r\n    {props.controls.map((ctrl) => (\r\n      <BuildControl\r\n        key={ctrl.label}\r\n        label={ctrl.label}\r\n        added={() => props.ingredientAdded(ctrl.type)}\r\n        removed={() => props.ingredientRemoved(ctrl.type)}\r\n        disabled={props.disabled[ctrl.type]}\r\n      />\r\n    ))}\r\n    <button\r\n      className={classes.OrderButton}\r\n      disabled={!props.purchasable}\r\n      onClick={props.ordered}\r\n    >\r\n      {props.isAuth ? \"Order Now\" : \"Log in to Order\"}\r\n    </button>\r\n  </div>\r\n);\r\n\r\nBuildControls.propTypes = {\r\n  controls: PropTypes.array.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  ingredientAdded: PropTypes.func.isRequired,\r\n  ingredientRemoved: PropTypes.func.isRequired,\r\n  disabled: PropTypes.object.isRequired,\r\n  purchasable: PropTypes.bool.isRequired,\r\n  ordered: PropTypes.func.isRequired,\r\n  isAuth: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default BuildControls;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nconst OrderSummary = (props) => {\r\n  const ingredientSummary = props.ingredients.map((igKey) => {\r\n    return (\r\n      <li key={igKey.type}>\r\n        <span\r\n          style={{\r\n            textTransform: \"capitalize\",\r\n          }}\r\n        >\r\n          {igKey.label}\r\n        </span>\r\n        : {igKey.amount}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h3>Your Order</h3>\r\n      <p>\r\n        Behold the glory of this dry, dejected sandwich with your choice of\r\n        ingredients:\r\n      </p>\r\n      <ul>{ingredientSummary}</ul>\r\n      <p>\r\n        <strong>Total Price: {props.price.toFixed(2)}</strong>\r\n      </p>\r\n      <p>Continue to Checkout?</p>\r\n      <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>\r\n        Cancel\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.purchaseContinued}>\r\n        Continue\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nOrderSummary.propTypes = {\r\n  ingredients: PropTypes.array.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  purchaseCancelled: PropTypes.func.isRequired,\r\n  purchaseContinued: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default OrderSummary;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Sandwich from \"../../components/Sandwich/Sandwich\";\r\nimport BuildControls from \"../../components/Sandwich/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Sandwich/OrderSummary/OrderSummary\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport ErrorHandler from \"../../hoc/ErrorHandler/ErrorHandler\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass SandwichSimulator extends Component {\r\n  state = {\r\n    purchasing: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onInitIngredients();\r\n  }\r\n\r\n  getIngredientCounts = () => {\r\n    if (!this.props.ings) {\r\n      return;\r\n    }\r\n    let ingCounts = {};\r\n    for (let ing of this.props.ings) {\r\n      ingCounts[ing.type] = ing.amount;\r\n    }\r\n    return ingCounts;\r\n  };\r\n\r\n  checkNoIngredients = () => {\r\n    const hasNoIngredients = Object.values(this.props.ings).every(\r\n      (value) => value === 0\r\n    );\r\n    return hasNoIngredients;\r\n  };\r\n\r\n  purchaseHandler = () => {\r\n    if (this.props.isAuthenticated) {\r\n      this.setState({ purchasing: true });\r\n    } else {\r\n      this.props.onSetAuthRedirectPath(\"/checkout\");\r\n      this.props.history.push(\"/auth\");\r\n    }\r\n  };\r\n\r\n  purchaseCancelHandler = () => {\r\n    this.setState({ purchasing: false });\r\n  };\r\n\r\n  purchaseContinueHandler = () => {\r\n    this.props.onInitPurchase();\r\n    this.props.history.push(\"/checkout\");\r\n  };\r\n\r\n  render() {\r\n    const ingCounts = this.getIngredientCounts();\r\n\r\n    const disabledInfo = {\r\n      ...ingCounts,\r\n    };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n\r\n    let orderSummary = null;\r\n    let sandwich = this.props.error ? (\r\n      <p>ingredients can't be loaded!</p>\r\n    ) : (\r\n      <Spinner />\r\n    );\r\n    if (ingCounts) {\r\n      sandwich = (\r\n        <>\r\n          <Sandwich ingredients={ingCounts} />\r\n          <BuildControls\r\n            controls={this.props.ings}\r\n            ingredientAdded={this.props.onIngredientAdded}\r\n            ingredientRemoved={this.props.onIngredientRemoved}\r\n            disabled={disabledInfo}\r\n            purchasable={!this.checkNoIngredients()}\r\n            price={this.props.price}\r\n            ordered={this.purchaseHandler}\r\n            isAuth={this.props.isAuthenticated}\r\n          />\r\n        </>\r\n      );\r\n      orderSummary = (\r\n        <OrderSummary\r\n          ingredients={this.props.ings}\r\n          price={this.props.price}\r\n          purchaseCancelled={this.purchaseCancelHandler}\r\n          purchaseContinued={this.purchaseContinueHandler}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          show={this.state.purchasing}\r\n          modalClosed={this.purchaseCancelHandler}\r\n        >\r\n          {orderSummary}\r\n        </Modal>\r\n        {sandwich}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nSandwichSimulator.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  ings: PropTypes.array,\r\n  price: PropTypes.number.isRequired,\r\n  error: PropTypes.object,\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ings: state.sandwichSimulator.ingredients,\r\n    price: state.sandwichSimulator.totalPrice,\r\n    error: state.sandwichSimulator.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n    onIngredientRemoved: (ingName) =>\r\n      dispatch(actions.removeIngredient(ingName)),\r\n    onInitIngredients: () => dispatch(actions.initIngredients()),\r\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n    onSetAuthRedirectPath: (path) =>\r\n      dispatch(actions.setAuthRedirectPath(path)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ErrorHandler(SandwichSimulator));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport classes from \"./Auth.module.css\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { updateObject, checkValidity } from \"../../utils/utilities\";\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    controls: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Your Email\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          message: \"Please enter a valid email\",\r\n          required: true,\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Password\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          message: \"Please enter a valid password\",\r\n          required: true,\r\n          minLength: 8,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    formIsValid: true,\r\n    isSignUp: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!this.props.buildingSandwich && this.props.authRedirectPath !== \"/\") {\r\n      this.props.onSetAuthRedirectPath();\r\n    }\r\n  }\r\n\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = updateObject(this.state.controls, {\r\n      [controlName]: updateObject(this.state.controls[controlName], {\r\n        value: event.target.value,\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          this.state.controls[controlName].validation\r\n        ),\r\n        touched: true,\r\n      }),\r\n    });\r\n\r\n    let formIsValid = true;\r\n    for (let inputId in updatedControls) {\r\n      formIsValid = updatedControls[inputId].valid && formIsValid;\r\n    }\r\n\r\n    this.setState({\r\n      controls: updatedControls,\r\n      formIsValid: formIsValid,\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onAuth(\r\n      this.state.controls.email.value,\r\n      this.state.controls.password.value,\r\n      this.state.isSignUp\r\n    );\r\n  };\r\n\r\n  switchAuthModeHandler = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        isSignUp: !prevState.isSignUp,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const formElements = [];\r\n    for (let key in this.state.controls) {\r\n      formElements.push({\r\n        id: key,\r\n        config: this.state.controls[key],\r\n      });\r\n    }\r\n\r\n    let form = formElements.map((formElement) => (\r\n      <Input\r\n        key={formElement.id}\r\n        elementType={formElement.config.elementType}\r\n        elementConfig={formElement.config.elementConfig}\r\n        value={formElement.config.value}\r\n        touched={formElement.config.touched}\r\n        shouldValidate={formElement.config.validation}\r\n        invalid={!formElement.config.valid}\r\n        errorMessage={\r\n          formElement.config.validation\r\n            ? formElement.config.validation.message\r\n            : null\r\n        }\r\n        changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n      />\r\n    ));\r\n\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n\r\n    let errorMessage = null;\r\n    if (this.props.error) {\r\n      errorMessage = (\r\n        <p className={classes.ErrorMessage}>{this.props.error.message}</p>\r\n      );\r\n    }\r\n\r\n    let authRedirect = null;\r\n    if (this.props.isAuthenticated) {\r\n      authRedirect = <Redirect to={this.props.authRedirectPath} />;\r\n    }\r\n\r\n    return (\r\n      <div className={classes.Auth}>\r\n        {authRedirect}\r\n        {errorMessage}\r\n        <form onSubmit={this.submitHandler}>\r\n          {form}\r\n          <Button btnType=\"Success\" clicked={this.submitHandler}>\r\n            Submit\r\n          </Button>\r\n        </form>\r\n        <Button btnType=\"Danger\" clicked={this.switchAuthModeHandler}>\r\n          Switch to {this.state.isSignUp ? \"sign in\" : \"sign up\"}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n    buildingSandwich: state.sandwichSimulator.building,\r\n    authRedirectPath: state.auth.authRedirectPath,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password, isSignUp) =>\r\n      dispatch(actions.auth(email, password, isSignUp)),\r\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\")),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.onLogout();\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLogout: () => dispatch(actions.logout()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React, { Component, lazy, Suspense } from \"react\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Layout from \"./hoc/Layout/Layout\";\nimport SandwichSimulator from \"./containers/SandwichSimulator/SandwichSimulator\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport * as actions from \"./store/actions/index\";\n\nconst Orders = lazy(() => import(\"./containers/Orders/Orders\"));\nconst Checkout = lazy(() => import(\"./containers/Checkout/Checkout\"));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignIn();\n  }\n\n  render() {\n    let routes = (\n      <Suspense fallback={<div>Loading...</div>}>\n        <Switch>\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/\" exact component={SandwichSimulator} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Suspense>\n    );\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route\n              path=\"/checkout\"\n              render={(props) => <Checkout {...props} />}\n            />\n            <Route path=\"/orders\" render={() => <Orders />} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/auth\" component={Auth} />\n            <Route path=\"/\" exact component={SandwichSimulator} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </Suspense>\n      );\n    }\n\n    return (\n      <div>\n        <Layout>{routes}</Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAutoSignIn: () => dispatch(actions.authCheckState()),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  ingredients: null,\r\n  totalPrice: 4,\r\n  error: null,\r\n  building: false,\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n  const ing = state.ingredients.find(\r\n    (ing) => ing.type === action.ingredientName\r\n  );\r\n  const updatedIng = updateObject(ing, { amount: ing.amount + 1 });\r\n  const updatedArr = [...state.ingredients].map((item) => {\r\n    return item.type === action.ingredientName ? updatedIng : item;\r\n  });\r\n  const newState = {\r\n    ingredients: updatedArr,\r\n    totalPrice: state.totalPrice + updatedIng.price,\r\n    building: true,\r\n  };\r\n  return updateObject(state, newState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n  const ing = state.ingredients.find(\r\n    (ing) => ing.type === action.ingredientName\r\n  );\r\n  const updatedIng = updateObject(ing, { amount: ing.amount - 1 });\r\n  const updatedArr = [...state.ingredients].map((item) => {\r\n    return item.type === action.ingredientName ? updatedIng : item;\r\n  });\r\n  const newState = {\r\n    ingredients: updatedArr,\r\n    totalPrice: state.totalPrice - updatedIng.price,\r\n    building: true,\r\n  };\r\n  return updateObject(state, newState);\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n  return updateObject(state, {\r\n    ingredients: action.ingredients,\r\n    totalPrice: initialState.totalPrice,\r\n    error: action.error,\r\n    building: false,\r\n  });\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n  return updateObject(state, { error: action.error });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT:\r\n      return addIngredient(state, action);\r\n    case actionTypes.REMOVE_INGREDIENT:\r\n      return removeIngredient(state, action);\r\n    case actionTypes.SET_INGREDIENTS:\r\n      return setIngredients(state, action);\r\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n      return fetchIngredientsFailed(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false,\r\n  error: null,\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n  const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n  return updateObject(state, {\r\n    loading: false,\r\n    purchased: true,\r\n    orders: state.orders.concat(newOrder),\r\n  });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PURCHASE_INIT:\r\n      return updateObject(state, { purchased: false, error: null });\r\n    case actionTypes.PURCHASE_START:\r\n      return updateObject(state, { loading: true, error: null });\r\n    case actionTypes.PURCHASE_SUCCESS:\r\n      return purchaseBurgerSuccess(state, action);\r\n    case actionTypes.PURCHASE_FAIL:\r\n      return updateObject(state, { loading: false, error: action.error });\r\n    case actionTypes.FETCH_ORDERS_START:\r\n      return updateObject(state, { loading: true, error: null });\r\n    case actionTypes.FETCH_ORDERS_SUCCESS:\r\n      return updateObject(state, { orders: action.orders, loading: false });\r\n    case actionTypes.FETCH_ORDERS_FAIL:\r\n      return updateObject(state, { loading: false, error: action.error });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../../utils/utilities\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  authRedirectPath: \"/\",\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authLogout = (state) => {\r\n  return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return updateObject(state, { error: null, loading: true });\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state);\r\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n      return updateObject(state, { authRedirectPath: action.path });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport sandwichSimulatorReducer from \"./store/reducers/sandwichSimulator\";\nimport orderReducer from \"./store/reducers/order\";\nimport authReducer from \"./store/reducers/auth\";\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst rootReducer = combineReducers({\n  sandwichSimulator: sandwichSimulatorReducer,\n  order: orderReducer,\n  auth: authReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter basename=\"/sandwich-simulator/\">\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
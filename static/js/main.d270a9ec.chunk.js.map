{"version":3,"sources":["store/actions/actionTypes.js","utils/utilities.js","utils/serverApi.js","store/actions/sandwichSimulator.js","store/actions/order.js","store/actions/auth.js","components/UI/Button/Button.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Sandwich/BuildControls/BuildControl/BuildControl.module.css","components/UI/Spinner/Spinner.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Sandwich/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","containers/Auth/Auth.module.css","hoc/ErrorHandler/ErrorHandler.js","components/UI/Input/Input.js","components/Sandwich/Ingredient/Ingredient.js","components/Sandwich/Sandwich.js","hoc/Layout/Layout.module.css","assets/images/logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Sandwich/Sandwich.module.css","components/Sandwich/Ingredient/Ingredient.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Sandwich/BuildControls/BuildControl/BuildControl.js","components/Sandwich/BuildControls/BuildControls.js","components/Sandwich/OrderSummary/OrderSummary.js","containers/SandwichSimulator/SandwichSimulator.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/sandwichSimulator.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["SET_INGREDIENTS","ADD_INGREDIENT","REMOVE_INGREDIENT","FETCH_INGREDIENTS_FAILED","PURCHASE_INIT","PURCHASE_START","PURCHASE_SUCCESS","PURCHASE_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","getIngredientCounts","ingredientArray","ingCounts","ing","type","amount","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","Server","baseUrl","get","route","a","fetch","response","json","result","message","data","post","method","headers","body","JSON","stringify","Auth","signUp","authData","signIn","AuthServer","addIngredient","name","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","then","Error","ingredients","error","catch","fetchIngredientsFailed","purchaseInit","purchaseSandwich","orderData","token","id","orderId","purchaseSuccess","purchaseFail","fetchOrders","userId","queryParams","res","orders","fetchedOrders","key","push","fetchOrdersFail","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignUp","returnSecureToken","authPost","expirationDate","Date","getTime","expiresIn","setItem","localId","authFail","setAuthRedirectPath","path","authCheckState","getItem","Button","props","disabled","className","classes","btnType","join","onClick","clicked","children","module","exports","Spinner","Loader","Backdrop","show","React","memo","modalClosed","Modal","style","transform","opacity","prevProps","nextProps","withErrorHandler","WrappedComponent","useState","hasError","setHasError","useEffect","displayError","toString","Input","inputElement","inputClasses","InputElement","validationError","touched","shouldValidate","invalid","Invalid","ValidationError","errorMessage","elementType","elementConfig","onChange","changed","options","map","option","displayValue","Label","label","Ingredient","Sandwich","transformedIngredients","Object","keys","igKey","Array","_","i","reduce","rootArr","currVal","concat","Logo","src","logoImg","alt","NavigationItem","to","link","exact","activeClassName","active","NavigationItems","isAuth","DrawerToggle","Toolbar","drawerToggleClicked","DesktopOnly","installPrompt","promptForInstall","SideDrawer","attachedClasses","Closed","open","Open","closed","connect","state","isAuthenticated","showSideDrawer","setShowSideDrawer","deferredPrompt","setDeferredPrompt","window","addEventListener","getInstallPrompt","removeEventListener","event","preventDefault","promptForInstallHandler","prompt","Content","BuildControl","Less","removed","More","added","BuildControls","price","toFixed","controls","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","ErrorHandler","purchasing","setPurchasing","useDispatch","ings","useSelector","sandwichSimulator","totalPrice","onInitIngredients","useCallback","actions","purchaseCancelHandler","disabledInfo","orderSummary","sandwich","ingName","values","every","history","loading","buildingSandwich","building","authRedirectPath","onAuth","onSetAuthRedirectPath","placeholder","validation","valid","authForm","setAuthForm","formIsValid","setFormIsValid","setIsSignUp","submitHandler","formElements","config","form","formElement","controlName","updatedControls","target","updatedFormIsValid","inputId","inputChangedHandler","ErrorMessage","authRedirect","onSubmit","prevSignUp","onLogout","Orders","lazy","Checkout","withRouter","onTryAutoSignIn","routes","component","SandwichSimulator","render","Logout","fallback","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","initialState","action","find","updatedIng","newState","item","setIngredients","reducer","purchased","newOrder","authLogout","composeEnhancers","compose","rootReducer","combineReducers","sandwichSimulatorReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","document","getElementById","URL","process","href","origin","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d270a9ec.chunk.js","sourcesContent":["export const SET_INGREDIENTS = \"SET_INGREDIENTS\";\r\nexport const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\r\n\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\r\nexport const PURCHASE_START = \"PURCHASE_START\";\r\nexport const PURCHASE_SUCCESS = \"PURCHASE_SUCCESS\";\r\nexport const PURCHASE_FAIL = \"PURCHASE_FAIL\";\r\n\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\r\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";\r\n","export const getIngredientCounts = (ingredientArray) => {\r\n  if (!ingredientArray) {\r\n    return;\r\n  }\r\n  let ingCounts = {};\r\n  for (let ing of ingredientArray) {\r\n    ingCounts[ing.type] = ing.amount;\r\n  }\r\n  return ingCounts;\r\n};\r\n\r\nexport const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n\r\nexport const checkValidity = (value, rules) => {\r\n  let isValid = true;\r\n  if (!rules) {\r\n    return true;\r\n  }\r\n\r\n  if (rules.required) {\r\n    isValid = value.trim() !== \"\" && isValid;\r\n  }\r\n\r\n  if (rules.minLength) {\r\n    isValid = value.length >= rules.minLength && isValid;\r\n  }\r\n\r\n  if (rules.maxLength) {\r\n    isValid = value.length <= rules.maxLength && isValid;\r\n  }\r\n\r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    isValid = pattern.test(value) && isValid;\r\n  }\r\n\r\n  if (rules.isNumeric) {\r\n    const pattern = /^\\d+$/;\r\n    isValid = pattern.test(value) && isValid;\r\n  }\r\n\r\n  return isValid;\r\n};\r\n","class Server {\r\n  baseUrl = \"https://sandwich-simulator-f4119.firebaseio.com\";\r\n\r\n  get = async (route) => {\r\n    try {\r\n      const response = await fetch(this.baseUrl + route);\r\n      const result = await response.json();\r\n      return result;\r\n    } catch (error) {\r\n      return { message: \"error\", data: error };\r\n    }\r\n  };\r\n\r\n  post = async (route, data) => {\r\n    try {\r\n      const response = await fetch(this.baseUrl + route, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n      const result = await response.json();\r\n      return result;\r\n    } catch (error) {\r\n      return { message: \"error\", data: error };\r\n    }\r\n  };\r\n}\r\n\r\nclass Auth extends Server {\r\n  baseUrl = \"https://identitytoolkit.googleapis.com/v1/accounts\";\r\n\r\n  signUp = async (authData) => {\r\n    return await this.post(\r\n      \":signUp?key=\" + process.env.REACT_APP_API_KEY,\r\n      authData\r\n    );\r\n  };\r\n\r\n  signIn = async (authData) => {\r\n    return await this.post(\r\n      \":signInWithPassword?key=\" + process.env.REACT_APP_API_KEY,\r\n      authData\r\n    );\r\n  };\r\n}\r\n\r\nexport default new Server();\r\n\r\nexport const AuthServer = new Auth();\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport Server from \"../../utils/serverApi\";\r\n\r\nexport const addIngredient = (name) => {\r\n  return {\r\n    type: actionTypes.ADD_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n  return {\r\n    type: actionTypes.REMOVE_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\n\r\nconst setIngredients = (ingredients) => {\r\n  return {\r\n    type: actionTypes.SET_INGREDIENTS,\r\n    ingredients: ingredients,\r\n    error: null,\r\n  };\r\n};\r\n\r\nconst fetchIngredientsFailed = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n  return (dispatch) => {\r\n    Server.get(\"/ingredient-details.json\")\r\n      .then((response) => {\r\n        if (response.message && response.message === \"error\") {\r\n          throw new Error(response.data);\r\n        } else {\r\n          dispatch(setIngredients(response));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchIngredientsFailed(error));\r\n      });\r\n  };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport Server from \"../../utils/serverApi\";\r\n\r\nexport const purchaseInit = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_INIT,\r\n  };\r\n};\r\n\r\nconst purchaseStart = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_START,\r\n  };\r\n};\r\n\r\nconst purchaseSuccess = (id, orderData) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_SUCCESS,\r\n    orderId: id,\r\n    orderData: orderData,\r\n  };\r\n};\r\n\r\nconst purchaseFail = (error) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const purchaseSandwich = (orderData, token) => {\r\n  return (dispatch) => {\r\n    dispatch(purchaseStart());\r\n    Server.post(\"/orders.json?auth=\" + token, orderData)\r\n      .then((result) => {\r\n        if (result.message && result.message === \"error\") {\r\n          throw new Error(result.data);\r\n        } else {\r\n          dispatch(purchaseSuccess(result.id, orderData));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(purchaseFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nconst fetchOrdersStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_START,\r\n  };\r\n};\r\n\r\nconst fetchOrdersSuccess = (orders) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n    orders: orders,\r\n  };\r\n};\r\n\r\nconst fetchOrdersFail = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchOrdersStart());\r\n    const queryParams =\r\n      \"?auth=\" + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n    Server.get(\"/orders.json\" + queryParams)\r\n      .then((res) => {\r\n        if (res.message && res.message === \"error\") {\r\n          throw new Error(res.data);\r\n        } else {\r\n          const fetchedOrders = [];\r\n          for (let key in res) {\r\n            fetchedOrders.push({\r\n              ...res[key],\r\n              id: key,\r\n            });\r\n          }\r\n          dispatch(fetchOrdersSuccess(fetchedOrders));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchOrdersFail(error));\r\n      });\r\n  };\r\n};\r\n","import { AuthServer } from \"../../utils/serverApi\";\r\n\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nconst authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nconst authSuccess = (token, userId) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    userId: userId,\r\n  };\r\n};\r\n\r\nconst authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nconst checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n    let authPost = AuthServer.signUp;\r\n    if (!isSignUp) {\r\n      authPost = AuthServer.signIn;\r\n    }\r\n    authPost(authData)\r\n      .then((response) => {\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.expiresIn * 1000\r\n        );\r\n        localStorage.setItem(\"token\", response.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.localId);\r\n\r\n        dispatch(authSuccess(response.idToken, response.localId));\r\n        dispatch(checkAuthTimeout(response.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(authFail(error.response.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n  return {\r\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n    path: path,\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout());\r\n      } else {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = (props) => (\r\n  <button\r\n    disabled={props.disabled}\r\n    className={[classes.Button, classes[props.btnType]].join(\" \")}\r\n    onClick={props.clicked}\r\n  >\r\n    {props.children}\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  btnType: PropTypes.string,\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2108_\",\"Open\":\"SideDrawer_Open__U2mty\",\"Closed\":\"SideDrawer_Closed__1kU7Y\",\"Logo\":\"SideDrawer_Logo__1c8Hu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__WCo61\",\"Label\":\"Input_Label__8gcUZ\",\"InputElement\":\"Input_InputElement__2ptBR\",\"Invalid\":\"Input_Invalid__bjp8-\",\"ValidationError\":\"Input_ValidationError__3AYNJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2Hvtx\",\"Label\":\"BuildControl_Label__2k9vz\",\"Less\":\"BuildControl_Less__1FRs_\",\"More\":\"BuildControl_More__16Vc4\"};","import React from 'react';\r\n\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default Spinner;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./Backdrop.module.css\";\r\n\r\nconst Backdrop = (props) =>\r\n  props.show ? (\r\n    <div className={classes.Backdrop} onClick={props.clicked}></div>\r\n  ) : null;\r\n\r\nBackdrop.propTypes = {\r\n  show: PropTypes.bool,\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\n\r\nconst Modal = (props) => (\r\n  <>\r\n    <Backdrop show={props.show} clicked={props.modalClosed} />\r\n    <div\r\n      className={classes.Modal}\r\n      style={{\r\n        transform: props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n        opacity: props.show ? \"1\" : \"0\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  </>\r\n);\r\n\r\nModal.propTypes = {\r\n  show: PropTypes.bool,\r\n  modalClosed: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(\r\n  Modal,\r\n  (prevProps, nextProps) =>\r\n    nextProps.show === prevProps.show &&\r\n    nextProps.children === prevProps.children\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3KFa1\",\"Logo\":\"Toolbar_Logo__-oxLA\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1SUqI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2GH9a\",\"active\":\"NavigationItem_active__253TC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1-jiy\",\"OrderButton\":\"BuildControls_OrderButton__2DLX8\",\"enable\":\"BuildControls_enable__2lLCN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2RSgR\",\"Success\":\"Button_Success__3BXkx\",\"Danger\":\"Button_Danger__1ppee\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3UhUn\",\"ErrorMessage\":\"Auth_ErrorMessage__1IAJ6\"};","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\n\r\nconst withErrorHandler = (WrappedComponent) => {\r\n  return (props) => {\r\n    const [hasError, setHasError] = useState(false);\r\n\r\n    const { error } = props;\r\n    useEffect(() => {\r\n      if (error) {\r\n        setHasError(true);\r\n      }\r\n    }, [error]);\r\n\r\n    const errorConfirmedHandler = () => {\r\n      setHasError(false);\r\n    };\r\n\r\n    let displayError = null;\r\n    if (hasError) {\r\n      displayError = (\r\n        <Modal show={hasError} modalClosed={errorConfirmedHandler}>\r\n          {props.error.toString()}\r\n        </Modal>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {displayError}\r\n        <WrappedComponent {...props} />\r\n      </>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n\r\n  let validationError = null;\r\n  if (props.touched && props.shouldValidate && props.invalid) {\r\n    inputClasses.push(classes.Invalid);\r\n    validationError = (\r\n      <p className={classes.ValidationError}>{props.errorMessage}</p>\r\n    );\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n      {validationError}\r\n    </div>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  touched: PropTypes.bool,\r\n  shouldValidate: PropTypes.object,\r\n  invalid: PropTypes.bool,\r\n  errorMessage: PropTypes.string,\r\n  elementType: PropTypes.string.isRequired,\r\n  elementConfig: PropTypes.object.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./Ingredient.module.css\";\r\n\r\nconst Ingredient = (props) => <div className={classes[props.type]}></div>;\r\n\r\nIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Ingredient;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./Sandwich.module.css\";\r\nimport Ingredient from \"./Ingredient/Ingredient\";\r\n\r\nconst Sandwich = (props) => {\r\n  let transformedIngredients = Object.keys(props.ingredients)\r\n    .map((igKey) => {\r\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n        return <Ingredient key={igKey + i} type={igKey} />;\r\n      });\r\n    })\r\n    .reduce((rootArr, currVal) => {\r\n      return rootArr.concat(currVal);\r\n    }, []);\r\n  if (transformedIngredients.length === 0) {\r\n    transformedIngredients = <p>Please start adding ingredients!</p>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Sandwich}>\r\n      <Ingredient type=\"BreadTop\" />\r\n      {transformedIngredients}\r\n      <Ingredient type=\"BreadBottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nSandwich.propTypes = {\r\n  ingredients: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Sandwich;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3mANH\"};","module.exports = __webpack_public_path__ + \"static/media/logo.2bbe275a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__WASKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__12fVw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3KHz-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__37y8V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sandwich\":\"Sandwich_Sandwich__3JK6B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"Ingredient_BreadBottom__2jSXL\",\"BreadTop\":\"Ingredient_BreadTop__m4xT0\",\"Meat\":\"Ingredient_Meat__3oDxd\",\"Cheese\":\"Ingredient_Cheese__3M8xC\",\"Bacon\":\"Ingredient_Bacon__22brV\",\"Lettuce\":\"Ingredient_Lettuce__UL8vC\",\"Tomato\":\"Ingredient_Tomato__3Itbg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1XS3E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2GJRX\",\"load6\":\"Spinner_load6__8dbzY\",\"round\":\"Spinner_round__hAUD1\"};","import React from \"react\";\r\n\r\nimport logoImg from \"../../assets/images/logo.png\";\r\nimport classes from \"./Logo.module.css\";\r\n\r\nconst Logo = () => (\r\n  <div className={classes.Logo}>\r\n    <img src={logoImg} alt=\"Logo\" />\r\n  </div>\r\n);\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./NavigationItem.module.css\";\r\n\r\nconst NavigationItem = (props) => (\r\n  <li className={classes.NavigationItem}>\r\n    <NavLink\r\n      to={props.link}\r\n      exact={props.exact}\r\n      activeClassName={classes.active}\r\n    >\r\n      {props.children}\r\n    </NavLink>\r\n  </li>\r\n);\r\n\r\nNavigationItem.propTypes = {\r\n  link: PropTypes.string.isRequired,\r\n  exact: PropTypes.bool,\r\n};\r\n\r\nexport default NavigationItem;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./NavigationItems.module.css\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\n\r\nconst NavigationItems = (props) => (\r\n  <ul className={classes.NavigationItems}>\r\n    <NavigationItem link=\"/\" exact>\r\n      Sandwich Simulator\r\n    </NavigationItem>\r\n    {props.isAuth ? (\r\n      <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    ) : null}\r\n    {props.isAuth ? (\r\n      <NavigationItem link=\"/logout\">Log out</NavigationItem>\r\n    ) : (\r\n      <NavigationItem link=\"/auth\">Log in</NavigationItem>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nexport default NavigationItems;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./DrawerToggle.module.css\";\r\n\r\nconst DrawerToggle = (props) => (\r\n  <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n\r\nDrawerToggle.propTypes = {\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default DrawerToggle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./Toolbar.module.css\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\r\n\r\nconst Toolbar = (props) => (\r\n  <header className={classes.Toolbar}>\r\n    <DrawerToggle clicked={props.drawerToggleClicked} />\r\n    <div className={classes.Logo}>\r\n      <Logo />\r\n    </div>\r\n    <nav className={classes.DesktopOnly}>\r\n      {props.installPrompt ? (\r\n        <button onClick={props.promptForInstall}>Install</button>\r\n      ) : null}\r\n      <NavigationItems isAuth={props.isAuth} />\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nToolbar.propTypes = {\r\n  drawerToggleClicked: PropTypes.func.isRequired,\r\n  installPrompt: PropTypes.object,\r\n  promptForInstall: PropTypes.func.isRequired,\r\n  isAuth: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./SideDrawer.module.css\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\n\r\nconst SideDrawer = (props) => {\r\n  let attachedClasses = [classes.SideDrawer, classes.Closed];\r\n  if (props.open) {\r\n    attachedClasses = [classes.SideDrawer, classes.Open];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Backdrop show={props.open} clicked={props.closed} />\r\n      <div className={attachedClasses.join(\" \")} onClick={props.closed}>\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          {props.installPrompt ? (\r\n            <button onClick={props.promptForInstall}>Install</button>\r\n          ) : null}\r\n          <NavigationItems isAuth={props.isAuth} />\r\n        </nav>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nSideDrawer.propTypes = {\r\n  open: PropTypes.bool,\r\n  closed: PropTypes.func.isRequired,\r\n  installPrompt: PropTypes.object,\r\n  promptForInstall: PropTypes.func.isRequired,\r\n  isAuth: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport classes from \"./Layout.module.css\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\r\n\r\nconst Layout = (props) => {\r\n  const [showSideDrawer, setShowSideDrawer] = useState(false);\r\n  const [deferredPrompt, setDeferredPrompt] = useState(null);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"beforeinstallprompt\", getInstallPrompt);\r\n    return () => {\r\n      window.removeEventListener(\"beforeinstallprompt\", getInstallPrompt);\r\n    };\r\n  }, []);\r\n\r\n  const getInstallPrompt = (event) => {\r\n    event.preventDefault();\r\n    setDeferredPrompt(event);\r\n    return false;\r\n  };\r\n\r\n  const promptForInstallHandler = () => {\r\n    deferredPrompt.prompt();\r\n    setDeferredPrompt(null);\r\n  };\r\n\r\n  const sideDrawerCloseHandler = () => {\r\n    setShowSideDrawer(false);\r\n  };\r\n\r\n  const sideDrawerToggleHandler = () => {\r\n    setShowSideDrawer(!showSideDrawer);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toolbar\r\n        isAuth={props.isAuthenticated}\r\n        drawerToggleClicked={sideDrawerToggleHandler}\r\n        installPrompt={deferredPrompt}\r\n        promptForInstall={promptForInstallHandler}\r\n      />\r\n      <SideDrawer\r\n        isAuth={props.isAuthenticated}\r\n        open={showSideDrawer}\r\n        closed={sideDrawerCloseHandler}\r\n        installPrompt={deferredPrompt}\r\n        promptForInstall={promptForInstallHandler}\r\n      />\r\n      <main className={classes.Content}>{props.children}</main>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./BuildControl.module.css\";\r\n\r\nconst BuildControl = (props) => (\r\n  <div className={classes.BuildControl}>\r\n    <div className={classes.Label}>{props.label}</div>\r\n    <button\r\n      className={classes.Less}\r\n      onClick={props.removed}\r\n      disabled={props.disabled}\r\n    >\r\n      Less\r\n    </button>\r\n    <button className={classes.More} onClick={props.added}>\r\n      More\r\n    </button>\r\n  </div>\r\n);\r\n\r\nBuildControl.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool,\r\n  removed: PropTypes.func.isRequired,\r\n  added: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BuildControl;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport classes from \"./BuildControls.module.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\n\r\nconst BuildControls = (props) => (\r\n  <div className={classes.BuildControls}>\r\n    <p>\r\n      Current Price: <strong>{props.price.toFixed(2)}</strong>\r\n    </p>\r\n    {props.controls.map((ctrl) => (\r\n      <BuildControl\r\n        key={ctrl.label}\r\n        label={ctrl.label}\r\n        added={() => props.ingredientAdded(ctrl.type)}\r\n        removed={() => props.ingredientRemoved(ctrl.type)}\r\n        disabled={props.disabled[ctrl.type]}\r\n      />\r\n    ))}\r\n    <button\r\n      className={classes.OrderButton}\r\n      disabled={!props.purchasable}\r\n      onClick={props.ordered}\r\n    >\r\n      {props.isAuth ? \"Order Now\" : \"Log in to Order\"}\r\n    </button>\r\n  </div>\r\n);\r\n\r\nBuildControls.propTypes = {\r\n  controls: PropTypes.array.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  ingredientAdded: PropTypes.func.isRequired,\r\n  ingredientRemoved: PropTypes.func.isRequired,\r\n  disabled: PropTypes.object.isRequired,\r\n  purchasable: PropTypes.bool.isRequired,\r\n  ordered: PropTypes.func.isRequired,\r\n  isAuth: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default BuildControls;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nconst OrderSummary = (props) => {\r\n  const ingredientSummary = props.ingredients.map((igKey) => {\r\n    return (\r\n      <li key={igKey.type}>\r\n        <span\r\n          style={{\r\n            textTransform: \"capitalize\",\r\n          }}\r\n        >\r\n          {igKey.label}\r\n        </span>\r\n        : {igKey.amount}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h3>Your Order</h3>\r\n      <p>\r\n        Behold the glory of this dry, dejected sandwich with your choice of\r\n        ingredients:\r\n      </p>\r\n      <ul>{ingredientSummary}</ul>\r\n      <p>\r\n        <strong>Total Price: {props.price.toFixed(2)}</strong>\r\n      </p>\r\n      <p>Continue to Checkout?</p>\r\n      <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>\r\n        Cancel\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.purchaseContinued}>\r\n        Continue\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nOrderSummary.propTypes = {\r\n  ingredients: PropTypes.array.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  purchaseCancelled: PropTypes.func.isRequired,\r\n  purchaseContinued: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default OrderSummary;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Sandwich from \"../../components/Sandwich/Sandwich\";\r\nimport BuildControls from \"../../components/Sandwich/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Sandwich/OrderSummary/OrderSummary\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport ErrorHandler from \"../../hoc/ErrorHandler/ErrorHandler\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nconst SandwichSimulator = (props) => {\r\n  const [purchasing, setPurchasing] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const ings = useSelector((state) => state.sandwichSimulator.ingredients);\r\n  const price = useSelector((state) => state.sandwichSimulator.totalPrice);\r\n  const error = useSelector((state) => state.sandwichSimulator.error);\r\n  const isAuthenticated = useSelector((state) => state.auth.token !== null);\r\n\r\n  const onIngredientAdded = (ingName) =>\r\n    dispatch(actions.addIngredient(ingName));\r\n  const onIngredientRemoved = (ingName) =>\r\n    dispatch(actions.removeIngredient(ingName));\r\n  const onInitIngredients = useCallback(\r\n    () => dispatch(actions.initIngredients()),\r\n    [dispatch]\r\n  );\r\n  const onInitPurchase = () => dispatch(actions.purchaseInit());\r\n  const onSetAuthRedirectPath = (path) =>\r\n    dispatch(actions.setAuthRedirectPath(path));\r\n\r\n  useEffect(() => {\r\n    onInitIngredients();\r\n  }, [onInitIngredients]);\r\n\r\n  const getIngredientCounts = () => {\r\n    if (!ings) {\r\n      return;\r\n    }\r\n    let ingCounts = {};\r\n    for (let ing of ings) {\r\n      ingCounts[ing.type] = ing.amount;\r\n    }\r\n    return ingCounts;\r\n  };\r\n\r\n  const checkNoIngredients = () => {\r\n    const hasNoIngredients = Object.values(ings).every(\r\n      (value) => value.amount === 0\r\n    );\r\n    return hasNoIngredients;\r\n  };\r\n\r\n  const purchaseHandler = () => {\r\n    if (isAuthenticated) {\r\n      setPurchasing(true);\r\n    } else {\r\n      onSetAuthRedirectPath(\"/checkout\");\r\n      props.history.push(\"/auth\");\r\n    }\r\n  };\r\n\r\n  const purchaseCancelHandler = () => {\r\n    setPurchasing(false);\r\n  };\r\n\r\n  const purchaseContinueHandler = () => {\r\n    onInitPurchase();\r\n    props.history.push(\"/checkout\");\r\n  };\r\n\r\n  const ingCounts = getIngredientCounts();\r\n\r\n  const disabledInfo = {\r\n    ...ingCounts,\r\n  };\r\n  for (let key in disabledInfo) {\r\n    disabledInfo[key] = disabledInfo[key] <= 0;\r\n  }\r\n\r\n  let orderSummary = null;\r\n  let sandwich = error ? <p>ingredients can't be loaded!</p> : <Spinner />;\r\n  if (ingCounts) {\r\n    sandwich = (\r\n      <>\r\n        <Sandwich ingredients={ingCounts} />\r\n        <BuildControls\r\n          controls={ings}\r\n          ingredientAdded={onIngredientAdded}\r\n          ingredientRemoved={onIngredientRemoved}\r\n          disabled={disabledInfo}\r\n          purchasable={!checkNoIngredients()}\r\n          price={price}\r\n          ordered={purchaseHandler}\r\n          isAuth={isAuthenticated}\r\n        />\r\n      </>\r\n    );\r\n    orderSummary = (\r\n      <OrderSummary\r\n        ingredients={ings}\r\n        price={price}\r\n        purchaseCancelled={purchaseCancelHandler}\r\n        purchaseContinued={purchaseContinueHandler}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={purchasing} modalClosed={purchaseCancelHandler}>\r\n        {orderSummary}\r\n      </Modal>\r\n      {sandwich}\r\n    </>\r\n  );\r\n};\r\n\r\nSandwichSimulator.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ErrorHandler(SandwichSimulator);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport classes from \"./Auth.module.css\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { updateObject, checkValidity } from \"../../utils/utilities\";\r\n\r\nconst Auth = (props) => {\r\n  const [authForm, setAuthForm] = useState({\r\n    email: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"email\",\r\n        placeholder: \"Your Email\",\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        message: \"Please enter a valid email\",\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    password: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"password\",\r\n        placeholder: \"Password\",\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        message: \"Please enter a valid password\",\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  });\r\n  const [formIsValid, setFormIsValid] = useState(true);\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n\r\n  const { buildingSandwich, authRedirectPath, onSetAuthRedirectPath } = props;\r\n  useEffect(() => {\r\n    if (!buildingSandwich && authRedirectPath !== \"/\") {\r\n      onSetAuthRedirectPath();\r\n    }\r\n  }, [buildingSandwich, authRedirectPath, onSetAuthRedirectPath]);\r\n\r\n  const inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = updateObject(authForm, {\r\n      [controlName]: updateObject(authForm[controlName], {\r\n        value: event.target.value,\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          authForm[controlName].validation\r\n        ),\r\n        touched: true,\r\n      }),\r\n    });\r\n\r\n    let updatedFormIsValid = true;\r\n    for (let inputId in updatedControls) {\r\n      updatedFormIsValid = updatedControls[inputId].valid && updatedFormIsValid;\r\n    }\r\n\r\n    setAuthForm(updatedControls);\r\n    setFormIsValid(updatedFormIsValid);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    props.onAuth(authForm.email.value, authForm.password.value, isSignUp);\r\n  };\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsSignUp((prevSignUp) => !prevSignUp);\r\n  };\r\n\r\n  const formElements = [];\r\n  for (let key in authForm) {\r\n    formElements.push({\r\n      id: key,\r\n      config: authForm[key],\r\n    });\r\n  }\r\n\r\n  let form = formElements.map((formElement) => (\r\n    <Input\r\n      key={formElement.id}\r\n      elementType={formElement.config.elementType}\r\n      elementConfig={formElement.config.elementConfig}\r\n      value={formElement.config.value}\r\n      touched={formElement.config.touched}\r\n      shouldValidate={formElement.config.validation}\r\n      invalid={!formElement.config.valid}\r\n      errorMessage={\r\n        formElement.config.validation\r\n          ? formElement.config.validation.message\r\n          : null\r\n      }\r\n      changed={(event) => inputChangedHandler(event, formElement.id)}\r\n    />\r\n  ));\r\n\r\n  if (props.loading) {\r\n    form = <Spinner />;\r\n  }\r\n\r\n  let errorMessage = null;\r\n  if (props.error) {\r\n    errorMessage = (\r\n      <p className={classes.ErrorMessage}>{props.error.message}</p>\r\n    );\r\n  }\r\n\r\n  let authRedirect = null;\r\n  if (props.isAuthenticated) {\r\n    authRedirect = <Redirect to={props.authRedirectPath} />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Auth}>\r\n      {authRedirect}\r\n      {errorMessage}\r\n      <form onSubmit={submitHandler}>\r\n        {form}\r\n        <Button\r\n          btnType=\"Success\"\r\n          clicked={submitHandler}\r\n          disabled={!formIsValid}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n      <Button btnType=\"Danger\" clicked={switchAuthModeHandler}>\r\n        Switch to {isSignUp ? \"sign in\" : \"sign up\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n    buildingSandwich: state.sandwichSimulator.building,\r\n    authRedirectPath: state.auth.authRedirectPath,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password, isSignUp) =>\r\n      dispatch(actions.auth(email, password, isSignUp)),\r\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\")),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nconst Logout = (props) => {\r\n  const { onLogout } = props;\r\n  useEffect(() => {\r\n    onLogout();\r\n  }, [onLogout]);\r\n\r\n  return <Redirect to=\"/\" />;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLogout: () => dispatch(actions.logout()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React, { useEffect, lazy, Suspense } from \"react\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Layout from \"./hoc/Layout/Layout\";\nimport SandwichSimulator from \"./containers/SandwichSimulator/SandwichSimulator\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport * as actions from \"./store/actions/index\";\n\nconst Orders = lazy(() => import(\"./containers/Orders/Orders\"));\nconst Checkout = lazy(() => import(\"./containers/Checkout/Checkout\"));\n\nconst App = (props) => {\n  const { onTryAutoSignIn } = props;\n\n  useEffect(() => {\n    onTryAutoSignIn();\n  }, [onTryAutoSignIn]);\n\n  let routes = (\n    <Switch>\n      <Route path=\"/auth\" component={Auth} />\n      <Route path=\"/\" exact component={SandwichSimulator} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n  if (props.isAuthenticated) {\n    routes = (\n      <Switch>\n        <Route path=\"/checkout\" render={(props) => <Checkout {...props} />} />\n        <Route path=\"/orders\" render={() => <Orders />} />\n        <Route path=\"/logout\" component={Logout} />\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/\" exact component={SandwichSimulator} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <div>\n      <Layout>\n        <Suspense fallback={<p>Loading...</p>}>{routes}</Suspense>\n      </Layout>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAutoSignIn: () => dispatch(actions.authCheckState()),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../../utils/utilities\";\r\n\r\nconst initialState = {\r\n  ingredients: null,\r\n  totalPrice: 4,\r\n  error: null,\r\n  building: false,\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n  const ing = state.ingredients.find(\r\n    (ing) => ing.type === action.ingredientName\r\n  );\r\n  const updatedIng = updateObject(ing, { amount: ing.amount + 1 });\r\n  const updatedArr = [...state.ingredients].map((item) => {\r\n    return item.type === action.ingredientName ? updatedIng : item;\r\n  });\r\n  const newState = {\r\n    ingredients: updatedArr,\r\n    totalPrice: state.totalPrice + updatedIng.price,\r\n    building: true,\r\n  };\r\n  return updateObject(state, newState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n  const ing = state.ingredients.find(\r\n    (ing) => ing.type === action.ingredientName\r\n  );\r\n  const updatedIng = updateObject(ing, { amount: ing.amount - 1 });\r\n  const updatedArr = [...state.ingredients].map((item) => {\r\n    return item.type === action.ingredientName ? updatedIng : item;\r\n  });\r\n  const newState = {\r\n    ingredients: updatedArr,\r\n    totalPrice: state.totalPrice - updatedIng.price,\r\n    building: true,\r\n  };\r\n  return updateObject(state, newState);\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n  return updateObject(state, {\r\n    ingredients: action.ingredients,\r\n    totalPrice: initialState.totalPrice,\r\n    error: action.error,\r\n    building: false,\r\n  });\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n  return updateObject(state, { error: action.error });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT:\r\n      return addIngredient(state, action);\r\n    case actionTypes.REMOVE_INGREDIENT:\r\n      return removeIngredient(state, action);\r\n    case actionTypes.SET_INGREDIENTS:\r\n      return setIngredients(state, action);\r\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n      return fetchIngredientsFailed(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../../utils/utilities\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false,\r\n  error: null,\r\n};\r\n\r\nconst purchaseSuccess = (state, action) => {\r\n  const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n  return updateObject(state, {\r\n    loading: false,\r\n    purchased: true,\r\n    orders: state.orders.concat(newOrder),\r\n  });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PURCHASE_INIT:\r\n      return updateObject(state, { purchased: false, error: null });\r\n    case actionTypes.PURCHASE_START:\r\n      return updateObject(state, { loading: true, error: null });\r\n    case actionTypes.PURCHASE_SUCCESS:\r\n      return purchaseSuccess(state, action);\r\n    case actionTypes.PURCHASE_FAIL:\r\n      return updateObject(state, { loading: false, error: action.error });\r\n    case actionTypes.FETCH_ORDERS_START:\r\n      return updateObject(state, { loading: true, error: null });\r\n    case actionTypes.FETCH_ORDERS_SUCCESS:\r\n      return updateObject(state, { orders: action.orders, loading: false });\r\n    case actionTypes.FETCH_ORDERS_FAIL:\r\n      return updateObject(state, { loading: false, error: action.error });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../../utils/utilities\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  authRedirectPath: \"/\",\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authLogout = (state) => {\r\n  return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return updateObject(state, { error: null, loading: true });\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state);\r\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n      return updateObject(state, { authRedirectPath: action.path });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport sandwichSimulatorReducer from \"./store/reducers/sandwichSimulator\";\nimport orderReducer from \"./store/reducers/order\";\nimport authReducer from \"./store/reducers/auth\";\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst rootReducer = combineReducers({\n  sandwichSimulator: sandwichSimulatorReducer,\n  order: orderReducer,\n  auth: authReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter basename=\"/sandwich-simulator/\">\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\nserviceWorker.register();\n"],"sourceRoot":""}